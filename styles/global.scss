/* the props */
@import "open-props/style";
@import "open-props/normalize.min.css";
@import "./properties.scss";


html,
body {
  padding: 0;
  margin: 0;
  line-height: 1.6;
  font-size: 18px;
  min-height: 100%;
  width: 100%;
  transition: opacity 1250ms ease, color 1250ms ease, background-color 1250ms ease;
}

html {
  background: var(--background);
  color: var(--text);
}


* {
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: var(--text);
}

a:visited {
  color: var(--text);
}

a:hover {
  text-decoration: underline;
  // color: var(--_primary);
}

img {
  max-width: 100%;
  display: block;
}

@page {
  size: A4 portrait;
}


.button {
  display: inline-flex;
  white-space: nowrap;
  
  font-size: var(--font-size-fluid-1);
  font-weight: var(--font-weight-7);
  
  padding-inline: var(--size-6);
  padding-block: var(--size-3);

  color: var(--blue-9);
  border: var(--border-size-2) solid var(--blue-5);
  background-color: transparent;
  border-radius: var(--radius-2);
  
  &:is(:hover, :focus) {
    cursor: pointer;
    color: var(--blue-0);
    background-color: var(--blue-5);
    
    & .light & {
      text-shadow: 0 1px 0 var(--blue-8);
    }
  }
  
  &:active:not(:focus-visible) {
    position: relative;
/*     inset-block-start: 2px; */
  }

  &.dark & {
    border-color: var(--blue-3);
    color: var(--blue-1);
    
    &:hover {
      background-color: var(--blue-3);
      color: black;
    }
  }
}

@media
 (prefers-reduced-motion: no-preference) {
  .button:focus {
    transition: outline-offset .25s ease;
  }
  .button:focus:not(:active) {
    outline-offset: 5px;
  }
}
